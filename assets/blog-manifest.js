const postJSON = [{"title":"Generating posts, ye Gods","tags":{"bash":true,"shell":true,"timestamps":true},"date":"2017-09-27T17:37:58.000Z","markdown":"\nI wrote a shell script.  Since writing .sh is as horrible as it is useful, I deemed it worth the practice.  Here's what I came up with:\n\n```bash\n#!/bin/bash\n\n# Create the file with timestamp\ntimestamp=$(date -u \"+%Y-%m-%dT%H:%M:%SZ\")\nnew_post_file=\"./posts/$timestamp.md\"\ntouch $new_post_file\n\n# Capture first argument (title) and remove from arg list\ntitle=$1\nshift\n\n# Build tags list:\n# Set Internal Field Separator to Comma so we can join the remaining args\nIFS=,\njoin_tags=$*\n\ncat <<- EOF > $new_post_file\ntitle: $title\ntags: $join_tags\ndate: $timestamp\n\nwrite content here\n\nEOF\n\nnvim $new_post_file\n```\n\nRunning `scripts/post \"Generating Posts\" bash shell timestamps` gave me the following\n\n```\ntitle: Generating posts\ntags: bash,shell,timestamps\ndate: 2017-09-27T17:37:58Z\n\nwrite content here\n```\n\nThe idea is the javascript will parse the header to pull out pertinent data for building the header (markdown alone wont let me right-align the date, for one).  This takes a page out of jekyll's book by having a \"header\" section with key data points.  The top of the document will be parsed into a POJO, and everything after the `----` will be parsed from markdown to jsx.  And so, a blog post is born.\n"},{"title":"Dat Blog Tho: Genesis!!!","tags":{"blog":true,"react":true,"server side rendering":true},"date":"2017-09-26T23:19:58.000Z","markdown":"\nI decided to try my hand at building a \"jekyll\"-like, dynamically generated static website using webpack and React.  Is it overkill?  Maybe (Yes).  Is it proving fun?  Yes.\n\nHere's a brief list of the features/goals/challenges that this site represents:\n  * Keep asset size low. (React 16 was released today which minifies to ~32% smaller along with many other features and optimizations)\n  * Parse markdown files into blog posts\n  * Leverage \"server side rendering\" methods to generate the static site efficiently where reasonable.\n  * Pipe dream of bundling this up into a modest static site builder like jekyll, with\n    * Very little to no scaffolding (eschewing jekyll's reliance on tethering yourself to a theme)\n    * Sass, React, and ES6 transpilation.\n    * Post generator that adds a timestamped markdown file to `./posts` which is then parsed into JSX\n  * Probably most importantly, I'd love to get more stuff out of my brain and into blog posts on a regular basis.\n"}];
export default postJSON